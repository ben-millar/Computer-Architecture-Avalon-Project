00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 31/01/2019 14:58:59

00001000                             1      org $1000
00001000                             2  
00001000                             3  *-------------------------------------------------------
00001000                             4  *Choose to be a Worker or a God 
00001000                             5  *https://www.avalon-rpg.com/
00001000                             6  *-------------------------------------------------------
00001000                             7  
00001000                             8  * Name: Ben Millar
00001000                             9  * Student ID: C00236772
00001000                            10  * Estimated time to complete: 18 hours
00001000                            11  
00001000                            12  * Session 1 Start: 14:40 End: 15:05 21/01/2019
00001000                            13  * Session 2 Start: 14:00
00001000                            14  
00001000                            15  *-------------------------------------------------------
00001000                            16  *Validation values to be used, modify as needed
00001000                            17  *Add additional validation values as required
00001000                            18  *-------------------------------------------------------
00001000  =00000000                 19  exit        EQU 0      used to exit assembly program
00001000  =00000064                 20  min_feed    EQU 100    min feed requirement
00001000  =00000001                 21  min_potions EQU 1      min number of potions
00001000  =00000009                 22  max_potions EQU 9      max number of potions
00001000  =00000006                 23  min_weapons EQU 6      min weapons
00001000  =00000005                 24  win_point   EQU 5      points accumilated on win
00001000  =00000008                 25  lose_point  EQU 8      points deducted on a loss
00001000                            26  
00001000  =00000064                 27  mine_loc    EQU 100    example for a hit
00001000                            28  
00001000                            29  
00001000                            30  *Start of Game
00001000                            31  start:
00001000  11FC 0064 4000            32      move.b  #100,$4000 put score/health in memory location $4000
00001006  47F8 4000                 33      lea     $4000,A3   assign address A3 to that memory location
0000100A                            34  
0000100A                            35  
0000100A  6100 1FFE                 36      bsr     welcome    branch to the welcome subroutine
0000100E  6100 2042                 37      bsr     input      branch to the input subroutine
00001012  6100 1FEC                 38      bsr     game       branch to the game subroutine
00001016                            39  *Game loop
00003000                            40      org     $3000      the rest of the program is to be located from 3000 onwards
00003000                            41  
00003000                            42  *-------------------------------------------------------
00003000                            43  *-------------------Game Subroutine---------------------
00003000                            44  *-------------------------------------------------------
00003000                            45  game:
00003000  6100 005A                 46      bsr     gameloop   branch to gameloop subroutine
00003004  4E75                      47      rts                return from game: subroutine
00003006                            48            
00003006                            49  end:
00003006  FFFF FFFF                 50      simhalt
0000300A                            51  
0000300A                            52  *-------------------------------------------------------
0000300A                            53  *-------------------Welcome Subroutine------------------
0000300A                            54  *-------------------------------------------------------
0000300A                            55  welcome:
0000300A  6100 01B8                 56      bsr     endl            branch to endl subroutine
0000300E  43F9 000031DD             57      lea     welcome_msg,A1  assign message to address register A1
00003014  103C 000E                 58      move.b  #14,D0          move literal 14 to DO
00003018  4E4F                      59      trap    #15             trap and interpret value in D0
0000301A  6100 01A8                 60      bsr     endl            branch to endl subroutine
0000301E                            61      
0000301E  103C 000D                 62      move.b  #13,D0          display string w/ CR LF
00003022  43F9 00003274             63      lea     takename_msg,A1
00003028  4E4F                      64      trap    #15
0000302A                            65      
0000302A  103C 0002                 66      move.b  #2, D0          take in player name
0000302E  4E4F                      67      TRAP #15
00003030                            68      
00003030  2E11                      69      move.l  (A1),D7         store player name in D7
00003032                            70      
00003032  103C 000E                 71      move.b  #14,D0          display string w/o CR LF  
00003036  43F9 00003287             72      lea     intro1_msg,A1         
0000303C  4E4F                      73      trap    #15
0000303E  2247                      74      movea.l D7,A1
00003040  4E4F                      75      trap    #15
00003042  43F9 00003291             76      lea     intro2_msg,A1  
00003048  4E4F                      77      trap    #15
0000304A                            78      
0000304A  103C 0004                 79      move.b  #4, D0
0000304E  4E4F                      80      trap    #15
00003050                            81      
00003050  4E75                      82      rts                     return from welcome: subroutine
00003052                            83  
00003052                            84  *-------------------------------------------------------
00003052                            85  *---------Gameplay Input Values Subroutine--------------
00003052                            86  *-------------------------------------------------------    
00003052                            87  input:
00003052  6100 0074                 88      bsr     potions         branch to potion input subroutine
00003056                            89      *halt here, take input
00003056  6100 008A                 90      bsr     weapons        branch to weapons input subroutine
0000305A                            91      *halt here, take input
0000305A  4E75                      92      rts
0000305C                            93  
0000305C                            94  *-------------------------------------------------------
0000305C                            95  *----------------Gameloop (main loop)-------------------
0000305C                            96  *------------------------------------------------------- 
0000305C                            97  gameloop:
0000305C                            98      * Leave this alone! Game engine
0000305C  6100 0028                 99      bsr     update          branch to update game subroutine 
00003060  6100 0134                100      bsr     clear_screen    clears the screen         
00003064  6100 003A                101      bsr     draw            branch to draw screen subroutine
00003068  6100 012C                102      bsr     clear_screen    clears the screen
0000306C  6100 008E                103      bsr     gameplay        branch to gameplay subroutine
00003070  6100 0124                104      bsr     clear_screen    clears the screen
00003074  6100 00A4                105      bsr     hud             branch to display HUD subroutine
00003078  6100 011C                106      bsr     clear_screen    clears the screen
0000307C  6100 0124                107      bsr     replay          branch to replay game subroutine
00003080  6100 0114                108      bsr     clear_screen    clears the screen
00003084  4E75                     109      rts                     return from gameloop: subroutine
00003086                           110  
00003086                           111  *-------------------------------------------------------
00003086                           112  *----------------Update Quest Progress------------------
00003086                           113  *  Complete Quest
00003086                           114  *------------------------------------------------------- 
00003086                           115  update:
00003086  6100 013C                116      bsr     endl            print a CR and LF
0000308A  6100 00EC                117      bsr     decorate        decorate with dots using a loop
0000308E                           118      * the below message must be set for each quest update
0000308E                           119      * increment some kind of progress counter?
0000308E  43F9 0000338B            120      lea     update_msg,A1   
00003094  103C 000E                121      move.b  #14,D0
00003098  4E4F                     122      trap    #15
0000309A  6100 00DC                123      bsr     decorate
0000309E  4E75                     124      rts
000030A0                           125  *-------------------------------------------------------
000030A0                           126  *-----------------Draw Quest Updates--------------------
000030A0                           127  * Draw the game progress information, status regarding
000030A0                           128  * quest
000030A0                           129  *------------------------------------------------------- 
000030A0                           130  draw:
000030A0  6100 0122                131      bsr     endl
000030A4  6100 00D2                132      bsr     decorate
000030A8                           133      * the below message must be set for each quest update
000030A8  43F9 0000339D            134      lea     draw_msg,A1
000030AE  6100 00C8                135      bsr     decorate
000030B2  4E75                     136      rts
000030B4                           137  *-------------------------------------------------------
000030B4                           138  *------------------------Potions------------------------
000030B4                           139  * Input the ingredients for each potion. Ingredients costs 
000030B4                           140  * money. For an advanced mark you need to manage this 
000030B4                           141  * resource
000030B4                           142  *------------------------------------------------------- 
000030B4                           143  feed:
000030B4                           144      * I assume this section will need to take user inputs
000030B4                           145      * and validate the same based on the players inventory
000030B4  6100 010E                146      bsr     endl
000030B8  6100 00BE                147      bsr     decorate
000030BC  43F9 000032A9            148      lea     potion_msg,A1
000030C2  6100 00B4                149      bsr     decorate
000030C6  4E75                     150      rts
000030C8                           151  
000030C8                           152  *-------------------------------------------------------
000030C8                           153  *--------------------Potions Inventory---------------------
000030C8                           154  * Number of potions to be used in a Quest 
000030C8                           155  *------------------------------------------------------- 
000030C8                           156  potions:
000030C8  6100 00FA                157      bsr     endl
000030CC  6100 00AA                158      bsr     decorate
000030D0  43F9 000032F5            159      lea     potions_msg,A1
000030D6  6100 00A0                160      bsr     decorate
000030DA  103C 000E                161         move.b  #14,D0
000030DE  4E4F                     162      trap    #15
000030E0                           163      * halt here for player to read information
000030E0  4E75                     164      rts
000030E2                           165  
000030E2                           166  *-------------------------------------------------------
000030E2                           167  *-------------------------Weapons-----------------------
000030E2                           168  * Number of weapons
000030E2                           169  *-------------------------------------------------------   
000030E2                           170  weapons:
000030E2  6100 00E0                171      bsr     endl
000030E6  6100 0090                172      bsr     decorate
000030EA  43F9 0000330A            173      lea     weapons_msg,A1
000030F0  103C 000E                174      move.b  #14,D0
000030F4  4E4F                     175      trap    #15
000030F6  6100 0080                176      bsr     decorate
000030FA                           177      *halt here for player to read information
000030FA  4E75                     178      rts
000030FC                           179  
000030FC                           180  *-------------------------------------------------------
000030FC                           181  *---Game Play (Quest Progress)--------------------------
000030FC                           182  *------------------------------------------------------- 
000030FC                           183  gameplay:
000030FC  6100 00C6                184      bsr     endl
00003100  6100 0076                185      bsr     decorate
00003104                           186      * update quest message PRN
00003104  43F9 0000337C            187      lea     gameplay_msg,A1
0000310A  103C 000E                188      move.b  #14,D0
0000310E  4E4F                     189      trap    #15
00003110  6100 0066                190      bsr     decorate
00003114  6100 0026                191      bsr     collision
00003118  4E75                     192      rts
0000311A                           193  
0000311A                           194  *-------------------------------------------------------
0000311A                           195  *-----------------Heads Up Display (Score)--------------
0000311A                           196  * Retrieves the score from memory location
0000311A                           197  *-------------------------------------------------------   
0000311A                           198  hud:
0000311A                           199  
0000311A  6100 00A8                200      bsr     endl
0000311E  6100 0058                201      bsr     decorate
00003122  43F9 000033E9            202      lea     hud_msg,A1
00003128  103C 000E                203      move.b  #14,D0
0000312C  4E4F                     204      trap    #15
0000312E  1213                     205      move.b  (A3),D1     retrieve the value A3 point to and move to D1
00003130  103C 0003                206      move.b  #3,D0       move literal 3 to D0
00003134  4E4F                     207      trap    #15         intrepret value in D0, which 3 which displays D1
00003136  6100 0040                208      bsr     decorate
0000313A                           209      * halt here to allow player to read information
0000313A  4E75                     210      rts
0000313C                           211  
0000313C                           212  *-------------------------------------------------------
0000313C                           213  *-----------------------Being Attacked------------------
0000313C                           214  * This could be used for collision detection
0000313C                           215  *-------------------------------------------------------
0000313C                           216  * Not entirely sure how this works! Ask about this in class on Tuesday
0000313C                           217  collision:
0000313C  123C 0064                218      move.b  #mine_loc,D1
00003140  B27C 0064                219      cmp     #100,D1 is( x == 100)?
00003144  6600 0010                220      bne     collision_miss if x is equal to 100, then hit
00003148                           221  collision_hit:
00003148                           222      *hit
00003148  43F9 000033AB            223      lea     hit_msg,A1
0000314E  303C 000E                224      move    #14,D0
00003152  4E4F                     225      trap    #15
00003154  4E75                     226      rts
00003156                           227      
00003156                           228  collision_miss:
00003156                           229      *miss
00003156  43F9 000033B3            230      lea     miss_msg,A1
0000315C  303C 000E                231      move    #14,D0
00003160  4E4F                     232      trap    #15
00003162  4E75                     233      rts
00003164                           234  
00003164                           235  *-------------------------------------------------------
00003164                           236  *--------------------------Loop-------------------------
00003164                           237  *-------------------------------------------------------
00003164                           238  
00003164                           239      * I believe this is a general loop function to be used
00003164                           240      * in multiple scenarios. Confirm this.
00003164                           241  loop:
00003164  163C 0005                242      move.b  #5, D3 loop counter D3=5
00003168                           243  next:
00003168  43F9 000033B9            244      lea     loop_msg,A1
0000316E  103C 000E                245      move.b  #14,D0
00003172  4E4F                     246      trap    #15
00003174  5343                     247      sub     #1,D3   decrement loop counter
00003176  66F0                     248      bne     next    repeat until D0=0
00003178                           249  
00003178                           250  *-------------------------------------------------------
00003178                           251  *------------------Screen Decoration--------------------
00003178                           252  *-------------------------------------------------------
00003178                           253  decorate:
00003178  163C 003C                254      move.b  #60, D3
0000317C  6100 0046                255      bsr     endl
00003180                           256  out:
00003180  43F9 000033B9            257      lea     loop_msg,A1
00003186  103C 000E                258      move.b  #14,D0
0000318A  4E4F                     259      trap    #15
0000318C  5343                     260      sub     #1,D3   decrement loop counter
0000318E  66F0                     261      bne     out     repeat until D0=0
00003190  6100 0032                262      bsr     endl
00003194  4E75                     263      rts
00003196                           264      
00003196                           265  clear_screen: 
00003196  103C 000B                266      move.b  #11,D0      clear screen
0000319A  323C FF00                267      move.w  #$ff00,D1
0000319E  4E4F                     268      trap    #15
000031A0  4E75                     269      rts
000031A2                           270  *-------------------------------------------------------
000031A2                           271  *------------------------Replay-------------------------
000031A2                           272  *-------------------------------------------------------
000031A2                           273  replay:
000031A2  6100 0020                274      bsr     endl
000031A6  43F9 000033BB            275      lea     replay_msg,A1
000031AC  103C 000E                276      move.b  #14,D0
000031B0  4E4F                     277      trap    #15
000031B2                           278      
000031B2  103C 0004                279      move.b  #4,D0
000031B6  4E4F                     280      trap    #15
000031B8                           281  
000031B8  B27C 0000                282      cmp     #exit,D1
000031BC  6700 FE48                283      beq     end         if SR Z register contains 1 beq => Branch Equals
000031C0  6100 FE9A                284      bsr     gameloop
000031C4                           285  
000031C4                           286  endl:
000031C4  48E7 8040                287      movem.l D0/A1,-(A7)
000031C8  303C 000E                288      move    #14,D0
000031CC  43F9 000031DA            289      lea     crlf,A1
000031D2  4E4F                     290      trap    #15
000031D4  4CDF 0201                291      movem.l (A7)+,D0/A1
000031D8  4E75                     292      rts
000031DA                           293      
000031DA                           294  *-------------------------------------------------------
000031DA                           295  *-------------------Data Delarations--------------------
000031DA                           296  *-------------------------------------------------------
000031DA                           297  
000031DA= 0D 0A 00                 298  crlf:           dc.b    $0D,$0A,0
000031DD= 2A 2A 2A 2A 2A 2A ...    299  welcome_msg:    dc.b    '************************************************************'
00003219= 0D 0A                    300                  dc.b    $0D,$0A
0000321B= 41 76 61 6C 6F 6E ...    301                  dc.b    'Avalon: The Legend Lives'
00003233= 0D 0A                    302                  dc.b    $0D,$0A
00003235= 2A 2A 2A 2A 2A 2A ...    303                  dc.b    '************************************************************'
00003271= 0D 0A 00                 304                  dc.b    $0D,$0A,0
00003274= 57 68 61 74 20 69 ...    305  takename_msg:   dc.b    'What is your name?',0
00003287                           306  
00003287= 57 65 6C 63 6F 6D ...    307  intro1_msg:     dc.b    'Welcome, ',0
00003291= 20 74 6F 20 74 68 ...    308  intro2_msg:     dc.b    ' to the world of Avalon',0
000032A9                           309  
000032A9= 46 65 65 64 20 6C ...    310  potion_msg:     dc.b    'Feed load (each horse needs at least 100 units of feed)'
000032E0= 0D 0A                    311                  dc.b    $0D,$0A
000032E2= 45 6E 74 65 72 20 ...    312                  dc.b    'Enter feed load : ',0
000032F5= 4E 75 6D 62 65 72 ...    313  potions_msg:    dc.b    'Number of potions : ',0
0000330A= 45 61 63 68 20 71 ...    314  weapons_msg:    dc.b    'Each quest need at least 2 Weapons'
0000332C= 0D 0A                    315                  dc.b    $0D,$0A
0000332E= 6D 69 6E 69 6D 75 ...    316                  dc.b    'minimum requirement is 2 i.e. Sword x 1 and Speer x 1.'
00003364= 0D 0A                    317                  dc.b    $0D,$0A
00003366= 45 6E 74 65 72 20 ...    318                  dc.b    'Enter # of weapons : ',0
0000337C= 41 64 64 20 47 61 ...    319  gameplay_msg:   dc.b    'Add Gameplay !',0
0000338B= 55 70 64 61 74 65 ...    320  update_msg:     dc.b    'Update Gameplay !',0
0000339D= 44 72 61 77 20 53 ...    321  draw_msg:       dc.b    'Draw Screen !',0
000033AB= 53 74 72 69 6B 65 ...    322  hit_msg:        dc.b    'Strike!',0
000033B3= 4D 69 73 73 21 00        323  miss_msg:       dc.b    'Miss!',0
000033B9= 2E 00                    324  loop_msg:       dc.b    '.',0
000033BB= 45 6E 74 65 72 20 ...    325  replay_msg:     dc.b    'Enter 0 to Quit any other number to replay : ',0
000033E9= 53 63 6F 72 65 20 ...    326  hud_msg:        dc.b    'Score : ',0
000033F2                           327  
000033F2                           328  health:     ds.w    1
000033F4                           329  score:      ds.w    1 reserve space for score
000033F6                           330  
000033F6                           331      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CLEAR_SCREEN        3196
COLLISION           313C
COLLISION_HIT       3148
COLLISION_MISS      3156
CRLF                31DA
DECORATE            3178
DRAW                30A0
DRAW_MSG            339D
END                 3006
ENDL                31C4
EXIT                0
FEED                30B4
GAME                3000
GAMELOOP            305C
GAMEPLAY            30FC
GAMEPLAY_MSG        337C
HEALTH              33F2
HIT_MSG             33AB
HUD                 311A
HUD_MSG             33E9
INPUT               3052
INTRO1_MSG          3287
INTRO2_MSG          3291
LOOP                3164
LOOP_MSG            33B9
LOSE_POINT          8
MAX_POTIONS         9
MINE_LOC            64
MIN_FEED            64
MIN_POTIONS         1
MIN_WEAPONS         6
MISS_MSG            33B3
NEXT                3168
OUT                 3180
POTIONS             30C8
POTIONS_MSG         32F5
POTION_MSG          32A9
REPLAY              31A2
REPLAY_MSG          33BB
SCORE               33F4
START               1000
TAKENAME_MSG        3274
UPDATE              3086
UPDATE_MSG          338B
WEAPONS             30E2
WEAPONS_MSG         330A
WELCOME             300A
WELCOME_MSG         31DD
WIN_POINT           5
